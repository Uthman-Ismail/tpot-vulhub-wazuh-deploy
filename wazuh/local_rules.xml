<!-- Local rules -->
<!-- Copyright (C) 2015, Wazuh Inc. -->

<group name="HoneypotServers">
  <rule id="100000" level="3">
    <if_sid>86601</if_sid>
    <hostname>uthman</hostname>
    <description>Honeypot - $(alert.signature)</description>
  </rule>
</group>

<!-- Honeypot Suricata Alerts -->
<group name="HoneypotAlerts">
  <rule id="100014" level="11">
    <if_sid>100000</if_sid>
    <field name="alert.severity">3</field>
    <description>Honeypot Suricata Alert Severity 3 - $(alert.signature). Source IP: $(src_ip). Destination IP: $(dest_ip).</description>
  </rule>
  <rule id="100015" level="11">
    <if_sid>100000</if_sid>
    <field name="alert.severity">2</field>
    <description>Honeypot Suricata Alert Severity 2 - $(alert.signature). Source IP: $(src_ip). Destination IP: $(dest_ip).</description>
  </rule>
  <rule id="100016" level="11">
    <if_sid>100000</if_sid>
    <field name="alert.severity">1</field>
    <description>Honeypot Suricata Alert Severity 1 - $(alert.signature). Source IP: $(src_ip). Destination IP: $(dest_ip).</description>
  </rule>
</group>

<!-- Honeypot Login Events -->
<group name="HoneypotLogin">
  <rule id="100075" level="11">
    <decoded_as>json</decoded_as>
    <field name="eventid">cowrie.login.failed</field>
    <description>$(username) with ip - $(src_ip) tried to login to honeypot.</description>
  </rule>
  <rule id="100076" level="11">
    <decoded_as>json</decoded_as>
    <field name="eventid">cowrie.login.success</field>
    <description>$(username) with ip - $(src_ip) login to honeypot.</description>
  </rule>
  <rule id="100077" level="11">
    <decoded_as>json</decoded_as>
    <field name="eventid">cowrie.session.closed</field>
    <description>$(username) with ip - $(src_ip) session closed on honeypot.</description>
  </rule>
  <rule id="100078" level="11">
    <decoded_as>json</decoded_as>
    <field name="eventid">cowrie.command.input</field>
    <description>$(username) with ip - $(src_ip) ran command $(input).</description>
  </rule>
</group>


<!-- Base Honeypot Group -->
<group name="Honeypots">
  <!-- Each rule kept as-is, IDs are fine here -->
  <!-- Dionaea -->
  <rule id="200002" level="10">
    <decoded_as>json</decoded_as>
    <field name="connection_type">dionaea.connections</field>
    <description>Dionaea connection detected from $(remote_host)</description>
  </rule>

  <!-- Other honeypots -->
  <rule id="200004" level="8"><decoded_as>json</decoded_as><match>conpot</match><description>Conpot ICS honeypot event detected.</description></rule>
  <rule id="200005" level="8"><match>elasticpot</match><description>Elasticpot event detected (Elasticsearch honeypot)</description></rule>
  <rule id="200007" level="10"><decoded_as>json</decoded_as><match>heralding</match><description>Heralding honeypot captured login or connection attempt.</description></rule>
  <rule id="200008" level="10"><match>citrix</match><description>Citrix honeypot interaction detected.</description></rule>
  <rule id="200009" level="9"><match>snare</match><description>Snare honeypot syslog message received.</description></rule>
  <rule id="200010" level="11"><match>mailoney</match><description>SMTP honeypot Mailoney detected connection.</description></rule>
  <rule id="200012" level="11"><match>ASA</match><description>Fake Cisco ASA log detected.</description></rule>
  <rule id="200022" level="11">
    <decoded_as>json</decoded_as>
    <field name="log">.+</field>
    <description>Samba honeypot log.</description>
  </rule>
  <rule id="200015" level="12"><match>struts2</match><description>Struts2 service log matched. Possible CVE interaction?</description></rule>
  <rule id="200016" level="12"><match>smtpd</match><description>OpenSMTPD honeypot received external SMTP request.</description></rule>
  <rule id="200017" level="10"><match>from=cat /etc/passwd;</match><description>Honeypot - Command injection attempt in FROM field</description></rule>
  <rule id="200018" level="10"><match>RCPT TO: cat /etc/passwd;</match><description>Honeypot - Command injection attempt in RCPT TO field</description></rule>
  <rule id="200019" level="9"><match>stat=Error ("/bin/sh: 1:</match><description>Honeypot - SMTP command execution attempt via shell</description></rule>
  <rule id="200020" level="7"><match>syntax error</match><description>Honeypot - SMTP injection syntax error response</description></rule>
  <rule id="200021" level="2"><match>warn: purge_task: opendir: No such file or directory</match><description>Honeypot - purge_task missing directory warning</description></rule>
</group>


<!-- wordpot -->
<group name="honeypot,wordpot,">
<rule id="105000" level="3">
    <decoded_as>json</decoded_as>
    <field name="plugin">\.</field>
    <description>Wordpot: Bad login or enumeration attempt from $(src_ip) on URL $(url) using username: $(username), password: $(password)</description>
  </rule>
  <!-- Catch bad login attempts -->
  <rule id="100500" level="10">
    <decoded_as>json</decoded_as>
    <program_name>wordpot</program_name>
    <field name="plugin">badlogin</field>
    <description>Wordpot: Bad login or enumeration attempt from $(src_ip) on URL $(url) using username: $(username), password: $(password)</description>
    <options>no_full_log</options>
    <group>wordpot</group>
  </rule>

  <!-- Catch any WPAD plugin usage -->
  <rule id="100501" level="7">
    <decoded_as>json</decoded_as>
    <program_name>wordpot</program_name>
    <field name="plugin">wpad</field>
    <description>Wordpot: WPAD query from $(src_ip)</description>
    <group>wordpot</group>
  </rule>

  <!-- General catch-all for other plugins -->
  <rule id="100502" level="5">
    <decoded_as>json</decoded_as>
    <program_name>wordpot</program_name>
    <description>Wordpot: Access from $(src_ip) on URL $(url) using plugin $(plugin)</description>
    <group>wordpot</group>
  </rule>
</group>

<!-- Dionaea -->
<group name="honeypot,dionaea">

  <!-- High level alert: New connection accepted on sensitive ports (e.g. SMB, FTP) -->
  <rule id="100801" level="10">
    <decoded_as>json</decoded_as>
    <field name="connection.type">accept</field>
    <field name="connection.protocol">smbd</field>
    <description>[SMB Attack] Connection from $(src_ip):$(src_port) to port $(dst_port) Protocol: $(connection.protocol)</description>
    <group>honeypot,dionaea,smb</group>
    <options>no_full_log</options>
  </rule>


   <!-- Medium level alert: FTP login attempt with captured credentials -->
  <rule id="100803" level="8">
    <decoded_as>json</decoded_as>
    <field name="connection.protocol">ftpd</field>
    <field name="ftp.credentials.username">.*</field>
    <field name="ftp.credentials.password">.*</field>
    <description>[CREDENTIAL THEFT] FTP login attempt from $(src_ip) Username: $(ftp.credentials.username.0) Password: $(ftp.credentials.password.0) Commands: $(ftp.commands.command)</description>
    <group>honeypot,dionaea,ftp,credentials</group>
    <options>no_full_log</options>
  </rule>
  
  <rule id="100802" level="10">
    <decoded_as>json</decoded_as>
    <field name="connection.type">accept</field>
    <field name="connection.protocol">ftpd</field>
    <description>[FTP Attack] Connection from $(src_ip):$(src_port) to port $(dst_port) Protocol: $(connection.protocol)</description>
    <group>honeypot,dionaea,ftp</group>
    <options>no_full_log</options>
  </rule>

  <!-- Low level alert: Listening state on FTP data ports -->
  <rule id="100804" level="3">
    <decoded_as>json</decoded_as>
    <field name="connection.type">listen</field>
    <field name="connection.protocol">ftpdatalisten</field>
    <description>[FTP Data Channel] Listening on $(dst_ip):$(dst_port)Connection type: $(connection.type)</description>
    <group>honeypot,dionaea,ftp</group>
    <options>no_full_log</options>
  </rule>


</group>



<!-- Redis Honeypot Events -->
<group name="Redishoneypot">
  <!-- Base rule for JSON decoding -->
  <rule id="110000" level="3">
    <decoded_as>json</decoded_as>
    <field name="level">info</field>
    <description>Redishoneypot: $(action) from $(addr)</description>
  </rule>
  
  <rule id="100090" level="5">
    <if_sid>110000</if_sid>
    <decoded_as>json</decoded_as>
    <program_name>Redishoneypot</program_name>
    <match>action=NewConnect</match>
    <description>Redishoneypot: New connection from $(addr)</description>
  </rule>

  <rule id="100091" level="5">
    <if_sid>110000</if_sid>
    <decoded_as>json</decoded_as>
    <match>action=Closed</match>
    <description>Redishoneypot: Connection closed from $(addr)</description>
  </rule>

  <rule id="100092" level="10">
    <if_sid>110000</if_sid>
    <decoded_as>json</decoded_as>
    <match>action=\.</match>
    <field name="addr">.+</field>
    <description>Redishoneypot: $(action) from $(addr)</description>
  </rule>
</group>

<!-- NGINX Attack Patterns -->
<group name="nginx,nginx_custom,attack,web,suspicious">
  <rule id="100108" level="7">
    <decoded_as>json</decoded_as>
    <status>400</status>
    <match>request_data=.*(passwd|login\.php|cmd|eval|base64|union|select|insert|drop|--|\.\./).*</match>
    <description>Suspicious HTTP request detected from $(src_ip) using $(http_user_agent) - Credentials: $(args)</description>
    <options>no_full_log</options>
    <mitre>
      <id>T1190</id>
    </mitre>
  </rule>
</group>

<group name="nginx_custom,nginx,web,json">

   <rule id="101000" level="3">
    <decoded_as>json</decoded_as>
    <description>NGINX - Request detected: $(request_uri) from $(src_ip)</description>
  </rule>

  <rule id="100101" level="10">
    <if_sid>101000</if_sid>
    <decoded_as>json</decoded_as>
    <field name="request_uri">\.</field>  <!-- Match any request URI -->
    <field name="trapped">!true|false</field> 
    <description>NGINX - Request detected: $(request_uri) from $(src_ip)</description>
</rule>

  <rule id="100103" level="10">
  <if_sid>101000</if_sid>
    <match>request_uri.*\/etc\/passwd</match>
    <status>200</status>
    <description>NGINX - Sensitive file accessed successfully</description>
    <group>nginx_custom,web,attack,critical</group>
  </rule>

  <rule id="100104" level="5">
    <if_sid>101000</if_sid>
    <match>status\":\"(4|5)[0-9]{2}</match>
    <description>NGINX - Client or server error detected</description>
    <group>nginx_custom,web,error</group>
  </rule>

  <rule id="100105" level="8">
    <same_source_ip />
    <if_sid>101000</if_sid>
    <if_matched_sid>101000</if_matched_sid>
    <description>NGINX - Multiple suspicious requests from same IP</description>
    <group>nginx_custom,web,bruteforce</group>
  </rule>
</group>

<group name="honeypot,heralding">
  <rule id="160000" level="3">
    <decoded_as>json</decoded_as>
    <field name="session_id">\.</field>
    <description>Heralding Honeypot: $(num_auth_attempts) authentication attempts detected from $(source_ip) on protocol $(protocol) port $(destination_port) (Session: $(session_id))</description>
  </rule>
  <rule id="160001" level="10">
    <if_sid>160000</if_sid>
    <decoded_as>json</decoded_as>
    <match>protocol=^(pop3|smtp|ssh|http|ftp|rdp|mysql)$</match>
    <field name="num_auth_attempts">[1-9][0-9]*</field>
    <description>Heralding Honeypot: Authentication attempts detected from $(source_ip) on protocol $(protocol) port $(destination_port)</description>
    <group>heralding</group>
    <options>no_full_log</options>
  </rule>

  <rule id="160003" level="10">
    <if_sid>160000</if_sid>
    <decoded_as>json</decoded_as>
    <field name="source_ip" type="pcre2">^192\.168\.</field>
    <description>Heralding Honeypot: Connection from internal network $(source_ip)</description>
    <group>heralding</group>
  </rule>
   <!-- Session events -->
  <rule id="160004" level="5">
    <if_sid>160000</if_sid>
    <field name="session_ended">true</field>
    <description>Heralding: Session ended (ID: $(session_id)) from $(source_ip)</description>
  </rule>
</group>

<group name="honeypot,h0neytr4p">
  <rule id="107000" level="3">
    <decoded_as>json</decoded_as>
    <field name="trapped">true|false</field>
    <field name="user-agent_os">\.</field>
    <field name="user-agent_browser">\.</field>
    <description>Base rule: h0neytr4p activity detected</description>
  </rule>
  
   <rule id="107001" level="10">
    <if_sid>107000</if_sid>
    <field name="trapped">true</field>
    <description>
      h0neytr4p: TRAPPED interaction from $(src_ip)
      to $(hostname)$(request_uri) via $(protocol)
      (Agent: $(user-agent_browser) $(user-agent_browser_version) on $(user-agent_os))
    </description>
    <options>no_full_log</options>
    <mitre>
      <id>T1190</id>
    </mitre>
  </rule>

   <!-- All HTTPS access -->
  <rule id="107002" level="5">
    <if_sid>107000</if_sid>
    <description>
      h0neytr4p: Access from $(src_ip) to $(hostname)$(request_uri)
      using $(user-agent_browser) on $(user-agent_os)
    </description>
  </rule>

  <rule id="100703" level="3">
    <if_sid>107000</if_sid>
    <decoded_as>json</decoded_as>
    <program_name>h0neytr4p</program_name>
    <field name="request_uri">/favicon.ico</field>
    <description>h0neytr4p: Favicon scan from $(src_ip) using $(user-agent)</description>
    <group>honeypot,h0neytr4p,recon</group>
    <options>no_full_log</options>
  </rule>
</group>



